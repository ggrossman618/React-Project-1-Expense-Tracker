{"ast":null,"code":"var _jsxFileName = \"/Users/ggrossman/Desktop/Altronix/react-course-starting-folder/src/components/ExpenseItem.js\";\n\n/* \n*** Component in react is just a combination of HTML + javascript \nfunction ***\n*/\nimport ExpenseDate from './ExpenseDate.js';\nimport \"./ExpenseItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseItem(props) {\n  /* props can be named anything, holds input parameters*/\n  return (\n    /*#__PURE__*/\n    //you cannot return multiple things, so wrap everything in <div>\n\n    /*you can replace hard-coded data with data inside {}, and inside \n    the {}, you can do basic java expressions, such as 1+1 */\n    // <ExpenseDate></ExpenseDate> = <ExpenseDate>, no paraemeter in the middle\n    _jsxDEV(\"div\", {\n      className: \"expense-item\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n        date: props.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), \" [//passing props.date to expenseDate\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-item__price\",\n          children: [\"$\", props.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_c = ExpenseItem;\nexport default ExpenseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"sources":["/Users/ggrossman/Desktop/Altronix/react-course-starting-folder/src/components/ExpenseItem.js"],"names":["ExpenseDate","ExpenseItem","props","date","title","amount"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA,OAAOA,WAAP,MAAwB,kBAAxB;AACA,OAAO,mBAAP;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B;AAEA;AAAA;AACE;;AACA;AACJ;AACI;AAEA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEA,KAAK,CAACC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,wDAEE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,gCACE;AAAA,oBAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,0BAAuCF,KAAK,CAACG,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAcD;;KAjBQJ,W;AAmBT,eAAeA,WAAf","sourcesContent":["/* \n*** Component in react is just a combination of HTML + javascript \nfunction ***\n*/\n\nimport ExpenseDate from './ExpenseDate.js';\nimport \"./ExpenseItem.css\";\n\nfunction ExpenseItem(props) {\n  /* props can be named anything, holds input parameters*/\n\n  return (\n    //you cannot return multiple things, so wrap everything in <div>\n    /*you can replace hard-coded data with data inside {}, and inside \n    the {}, you can do basic java expressions, such as 1+1 */\n    // <ExpenseDate></ExpenseDate> = <ExpenseDate>, no paraemeter in the middle\n\n    <div className=\"expense-item\">\n      <ExpenseDate date={props.date}/> [//passing props.date to expenseDate \n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default ExpenseItem;\n"]},"metadata":{},"sourceType":"module"}