{"ast":null,"code":"var _jsxFileName = \"/Users/ggrossman/Desktop/Altronix/react-course-starting-folder/src/components/ExpenseItem.js\";\n\n/* \n*** Component in react is just a combination of HTML + javascript \nfunction ***\n*/\nimport './ExpenseItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseItem() {\n  const expenseDate = new Date(2021, 2, 28);\n  const expenseTitle = 'Car Insurance';\n  const expenseAmount = 294.67;\n  return (\n    /*#__PURE__*/\n    //you cannot return multiple things, so wrap everything in <div>\n\n    /*you can replace hard-coded data with data inside {}, and inside \n    the {}, you can do basic java expressions, such as 1+1 */\n    _jsxDEV(\"div\", {\n      className: \"expense-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"June 4th, 2021\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: expenseTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-item__price\",\n          children: \"$294.67\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_c = ExpenseItem;\nexport default ExpenseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"sources":["/Users/ggrossman/Desktop/Altronix/react-course-starting-folder/src/components/ExpenseItem.js"],"names":["ExpenseItem","expenseDate","Date","expenseTitle","expenseAmount"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA,OAAO,mBAAP;;;AAEA,SAASA,WAAT,GAAuB;AACnB,QAAMC,WAAW,GAAG,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAApB;AACA,QAAMC,YAAY,GAAG,eAArB;AACA,QAAMC,aAAa,GAAG,MAAtB;AAEF;AAAA;AACE;;AACA;AACJ;AAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,gCACE;AAAA,oBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAaD;;KAlBQH,W;AAoBT,eAAeA,WAAf","sourcesContent":["/* \n*** Component in react is just a combination of HTML + javascript \nfunction ***\n*/\n\nimport './ExpenseItem.css';\n\nfunction ExpenseItem() {\n    const expenseDate = new Date(2021, 2, 28);\n    const expenseTitle = 'Car Insurance';\n    const expenseAmount = 294.67;\n\n  return (\n    //you cannot return multiple things, so wrap everything in <div>\n    /*you can replace hard-coded data with data inside {}, and inside \n    the {}, you can do basic java expressions, such as 1+1 */\n\n    <div className=\"expense-item\">\n      <div>June 4th, 2021</div>\n      <div className=\"expense-item__description\">\n        <h2>{expenseTitle}</h2>\n        <div className=\"expense-item__price\">$294.67</div>\n      </div>\n    </div>\n  );\n}\n\nexport default ExpenseItem;\n"]},"metadata":{},"sourceType":"module"}